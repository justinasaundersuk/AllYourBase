
//  Text overflow
//  An easy way to truncate text with an ellipsis.
//  Example usage:
//
// .text-truncate
// {
//     @include text-truncate()
// }
@mixin text-truncate($overflow: ellipsis) {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: $overflow; // values are: clip, ellipsis, or a string
}


// Absolute Positioning - shorthand
//
// Example usage:
//
// .relative-container {
//     @include .abs-pos(50px, 10px, 50px, 0);
// }
@mixin abs-pos($top: auto, $right: auto, $bottom: auto, $left: auto) {
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    position: absolute;
}

//    Rem font sizing with fallback
//    Note: "calculate-rem" function is required for use

//    Example usage:

//    h2 {
//        font-size: 24px;

//        @include min(768) { font-size: 30px; }
//        @include min(992) { font-size: 36px; }
//    }
@mixin font-size($size) {
    // font-size: $size;
    font-size: calculate-rem($size);
}

//    Border-radius
//
//    background-clip: padding-box is set to fix an overflow bug in some browsers
//    where the background is still partially visible despite border-radius
//    rounding the corners
//
@mixin tab-radius($top:0, $bottom:0) {
    border-radius: $top $top $bottom $bottom;
    background-clip: padding-box;
}

@mixin border-radius($radius: 8px) {
    border-radius: $radius;
    background-clip: padding-box;
}

@mixin corner-radius($topleft: 0, $topright: 0, $bottomright: 0, $bottomleft: 0) {
    border-radius: $topleft $topright $bottomright $bottomleft;
    background-clip: padding-box;
}


//    Used for shorthand media queries
//    Note: "em" function is required for use

//    Example usage:

//    h2 {
//        font-size: 24px;

//        @include min(768) { font-size: 30px; }
//        @include min(992) { font-size: 36px; }
//    }
@mixin min($bp, $max: 'null', $device: 'screen') {
    $bp: em($bp);
    @if $max == 'null' {
        @media only #{$device} and (min-width: #{$bp}) { @content; }
    } @else {
        $max: em($max);
        @media only #{$device} and (min-width: #{$bp}) and (max-width: #{$max}) { @content; }
    }
}

@mixin max($bp, $min: 'null', $device: 'screen') {
    $bp: em($bp);
    @if $min == 'null' {
        @media only #{$device} and (max-width: #{$bp}){@content;}
    } @else {
        $min: em($min);
        @media only #{$device} and (max-width: #{$bp}) and (min-width: #{$min}) { @content; }
    }
}


//    Center an element vertically and horizontally within a container
//        - container must be position: relative
//        - container must be fixed height

//    Example usage:

//    .social {
//        position: relative;

//        @include min(992) {
//            height: 460px;
//            margin-top: 0;
//            padding: 0;
//            overflow: hidden;

//            & .absolute-center {
//                @include absolute-center();
//            }
//        }
//    }
@mixin absolute-center() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}


//    Will align content to center in mobile view (a common requirement) and align to
//    $position at the $breakpoint (and above)

//    Defaults set to left and 480px

//    Example usage:

//    h2 {
//        font-size: 24px;
//        @include center-xs(left, 768)
//    }
//
//    Would suggest passing $breakpoint as your mobile > tablet breakpoint e.g.
//    $bp-sm (768px)
@mixin center-xs($position: 'left', $breakpoint: '480px') {
    text-align: center;

    @include min($breakpoint) {
        text-align: $position;
    }
}

//    Hi resolution retina image alternative
//    Example usage:

//    div.logo {
//        background: url("logo.png") no-repeat;
//        @include image-2x("logo2x.png", 100px, 25px);
//    }
@mixin image-2x($image, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3),
           (-o-min-device-pixel-ratio: 2.6/2),
           (-webkit-min-device-pixel-ratio: 1.3),
           (min-device-pixel-ratio: 1.3),
           (min-resolution: 1.3dppx) {
        // on retina, use image that's scaled by 2
        background-image: url($image);
        background-size: $width $height;
    }
}


//    Simple directional arrow (triangle) mixin
//    Example usage:

//    .arrowtest {
//        @include arrow(right, $blue, 12);
//    }

@mixin arrow($direction, $color, $size) {
    $rem-size: ($size / 10) + rem;

    @if $direction == 'left' {
        border-top: $rem-size solid transparent;
        border-right: $rem-size solid $color;
        border-bottom: $rem-size solid transparent;
    } @else if $direction == 'right' {
        border-top: $rem-size solid transparent;
        border-bottom: $rem-size solid transparent;
        border-left: $rem-size solid $color;
    } @else if $direction == 'p' {
        border-left: $rem-size solid transparent;
        border-right: $rem-size solid transparent;
        border-bottom: $rem-size solid $color;
    } @else if $direction == 'down' {
        border-left: $rem-size solid transparent;
        border-right: $rem-size solid transparent;
        border-top: $rem-size solid $color;
    }
}


//    Include font(s) via the file system
//    Fonts folder should include woff and woff2 file formats (svg, ttf and eot are no longer needed)
//    See: http://stackoverflow.com/questions/36105194/are-eot-ttf-and-svg-still-necessary-in-the-font-face-declaration

//    Example usage:

//    Within _fonts.scss:
//
//    @include fontface('defused','../fonts/defused/defused-webfont');
//
//    Then in use:
//
//    .defused {
//        font-family: 'defused';
//    }

@mixin fontface($family, $src, $style: normal, $weight: normal) {
    @font-face {
        font-family: $family;
        src: url('#{$src}.woff') format('woff'),
        url('#{$src}.woff2') format('woff2');
        font-style: $style;
        font-weight: $weight;
    }
}


// EXPERIMENTAL ---------------------------------------------------------------------------------------

//    A more backwards-compatible opacity mixin
//@mixin opacity($opacity) {
//    $ieopacity: ($opacity * 100);
//    opacity: $opacity;
// 	filter: alpha(opacity=$ieopacity); /* IE6+ */
//	filter: progid:DXImageTransform.Microsoft.Alpha(opacity=$ieopacity); /* IE6+ */
//	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(opacity=#{$ieopacity})"; /* this works in IE8 only */
//}

@mixin svg-background($bg-color) {
    background-image: url('data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%20standalone%3D%22no%22%3F%3E%0A%3Csvg%0A%20%20%20xmlns%3Adc%3D%22http%3A%2F%2Fpurl.org%2Fdc%2Felements%2F1.1%2F%22%0A%20%20%20xmlns%3Acc%3D%22http%3A%2F%2Fcreativecommons.org%2Fns%23%22%0A%20%20%20xmlns%3Ardf%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%22%0A%20%20%20xmlns%3Asvg%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%0A%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%0A%20%20%20version%3D%221.1%22%0A%20%20%20id%3D%22svg3492%22%0A%20%20%20preserveAspectRatio%3D%22none%22%0A%20%20%20viewBox%3D%220%200%20304%2023%22%3E%0A%20%20%3Cmetadata%3E%0A%20%20%20%20%3Crdf%3ARDF%3E%0A%20%20%20%20%20%20%3Ccc%3AWork%0A%20%20%20%20%20%20%20%20%20rdf%3Aabout%3D%22%22%3E%0A%20%20%20%20%20%20%20%20%3Cdc%3Aformat%3Eimage%2Fsvg%2Bxml%3C%2Fdc%3Aformat%3E%0A%20%20%20%20%20%20%20%20%3Cdc%3Atype%0A%20%20%20%20%20%20%20%20%20%20%20rdf%3Aresource%3D%22http%3A%2F%2Fpurl.org%2Fdc%2Fdcmitype%2FStillImage%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3Cdc%3Atitle%3E%3C%2Fdc%3Atitle%3E%0A%20%20%20%20%20%20%3C%2Fcc%3AWork%3E%0A%20%20%20%20%3C%2Frdf%3ARDF%3E%0A%20%20%3C%2Fmetadata%3E%0A%20%20%3Cg%0A%20%20%20%20%20transform%3D%22translate%28-165.80056%2C-456.60008%29%22%0A%20%20%20%20%20id%3D%22layer1%22%3E%0A%20%20%20%20%3Cpath%0A%20%20%20%20%20%20%20style%3D%22fill%3A%23#{$bg-color}%22%0A%20%20%20%20%20%20%20d%3D%22m%20397.11332%2C478.52816%20c%20-11.55%2C-0.40203%20-28.65%2C-1.20378%20-38%2C-1.78167%20-9.35%2C-0.57789%20-49.92994%2C-1.07224%20-90.17764%2C-1.09856%20-76.59141%2C-0.0501%20-85.33952%2C-0.45809%20-93.32236%2C-4.35252%20-4.40799%2C-2.15044%20-7.71865%2C-6.61454%20-9.22968%2C-12.44533%20l%20-0.58308%2C-2.25%20151.90638%2C0%20151.90638%2C0%200%2C5.49712%20c%200%2C4.84819%20-0.4018%2C5.94186%20-3.40363%2C9.26453%20-6.84982%2C7.58194%20-19.49135%2C8.89307%20-69.09637%2C7.16643%20z%22%0A%20%20%20%20%20%20%20id%3D%22path3519%22%20%2F%3E%0A%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E%0A');
    background-size: 100% 100%;
    background-repeat: no-repeat;

    // Set fall back
    .no-svg & {
        border-color: $bg-color;
        background-image: none;
    }
}

@mixin svg-background-cutaway($bg-color) {
    background-image: url('data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%20standalone%3D%22no%22%3F%3E%0A%3Csvg%0A%20%20%20xmlns%3Adc%3D%22http%3A%2F%2Fpurl.org%2Fdc%2Felements%2F1.1%2F%22%0A%20%20%20xmlns%3Acc%3D%22http%3A%2F%2Fcreativecommons.org%2Fns%23%22%0A%20%20%20xmlns%3Ardf%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%22%0A%20%20%20xmlns%3Asvg%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%0A%20%20%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%0A%20%20%20version%3D%221.1%22%0A%20%20%20id%3D%22svg2%22%0A%20%20%20preserveAspectRatio%3D%22none%22%0A%20%20%20viewBox%3D%220%200%20626%20430%22%3E%0A%20%20%3Cmetadata%0A%20%20%20%20%20id%3D%22metadata7%22%3E%0A%20%20%20%20%3Crdf%3ARDF%3E%0A%20%20%20%20%20%20%3Ccc%3AWork%0A%20%20%20%20%20%20%20%20%20rdf%3Aabout%3D%22%22%3E%0A%20%20%20%20%20%20%20%20%3Cdc%3Aformat%3Eimage%2Fsvg%2Bxml%3C%2Fdc%3Aformat%3E%0A%20%20%20%20%20%20%20%20%3Cdc%3Atype%0A%20%20%20%20%20%20%20%20%20%20%20rdf%3Aresource%3D%22http%3A%2F%2Fpurl.org%2Fdc%2Fdcmitype%2FStillImage%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3Cdc%3Atitle%3E%3C%2Fdc%3Atitle%3E%0A%20%20%20%20%20%20%3C%2Fcc%3AWork%3E%0A%20%20%20%20%3C%2Frdf%3ARDF%3E%0A%20%20%3C%2Fmetadata%3E%0A%20%20%3Cg%0A%20%20%20%20%20transform%3D%22translate%282907.5258%2C-286.13042%29%22%0A%20%20%20%20%20id%3D%22layer1%22%3E%0A%20%20%20%20%3Cpath%0A%20%20%20%20%20%20%20d%3D%22m%20-2452.7143%2C714.36803%20c%20-22.275%2C-0.70234%20-49.05%2C-1.84897%20-59.5%2C-2.54806%20-13.8035%2C-0.92343%20-60.162%2C-1.32127%20-169.5%2C-1.45459%20-106.6291%2C-0.13002%20-153.8523%2C-0.52519%20-162%2C-1.35563%20-27.8499%2C-2.83853%20-41.3934%2C-8.06486%20-47.3812%2C-18.28402%20-3.3658%2C-5.74411%20-8.156%2C-20.65323%20-10.2923%2C-32.03372%20-1.5304%2C-8.15241%20-1.75%2C-17.02345%20-1.8382%2C-74.25844%20-0.063%2C-40.90828%20-0.5388%2C-70.00366%20-1.2835%2C-78.5%20-3.1944%2C-36.44732%20-3.4603%2C-45.60693%20-2.5836%2C-89%200.4833%2C-23.925%200.7379%2C-55.13837%200.5657%2C-69.36304%20-0.2916%2C-24.09488%20-0.1664%2C-26.34579%201.8318%2C-32.92432%201.8446%2C-6.07299%203.0081%2C-7.92389%208.313%2C-13.22448%204.5548%2C-4.55099%207.7378%2C-6.75307%2012.1683%2C-8.41824%2014.1558%2C-5.32038%2011.7439%2C-5.1955%20122%2C-6.31645%20103.2857%2C-1.05009%20123.695%2C-0.80109%20195%2C2.37899%2012.65%2C0.56417%2064.85%2C1.40992%20116%2C1.87944%2091.024%2C0.83554%20100.9395%2C1.21484%20116.3166%2C4.44951%2025.0093%2C5.26088%2036.8032%2C16.75709%2042.1491%2C41.08535%201.849%2C8.41445%202.5411%2C14.63334%205.0585%2C45.45324%200.5616%2C6.875%201.5106%2C17.9%202.1088%2C24.5%201.0366%2C11.43443%200.9297%2C24.71769%20-0.7236%2C90%20-0.4666%2C18.42118%20-0.1819%2C29.81127%201.2248%2C49%202.3894%2C32.59406%202.8887%2C129.57033%200.7286%2C141.48731%20-2.2696%2C12.52039%20-8.8751%2C20.09401%20-21.3956%2C24.53133%20-13.2354%2C4.6907%20-60.7676%2C5.63374%20-146.9672%2C2.91582%20z%22%0A%20%20%20%20%20%20%20id%3D%22path3019%22%0A%20%20%20%20%20%20%20style%3D%22fill%3A%23#{$bg-color}%22%20%2F%3E%0A%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E%0A');
    background-size: 100% 100%;
    background-repeat: no-repeat;

    // Set fall back
    .no-svg & {
        border-color: $bg-color;
        background-image: none;
    }
}






// MC SPECIFIC ---------------------------------------------------------------------------------------


@mixin arrow-right($image) { 
    padding-right: 2.5rem !important;
    position: relative;
    
    &:after {
        content: "";
        display: block;
        position: absolute;
        width: 20px;
        height: 100%;
        top: 0;
        right: 5px;
        background: inline-image($image) no-repeat center;
        background-size: 65% auto;
        @include transition(background-size .1s ease-in-out);
    }

    &:hover:after {
        background-size: 80% auto;
    }
}